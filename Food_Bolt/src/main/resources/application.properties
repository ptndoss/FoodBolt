server.port = 8080
server.contextPath=/

# mysql parameters
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://foodbolt.cklshsqbnugp.us-east-1.rds.amazonaws.com:3306/foodbolt
spring.datasource.url = jdbc:mysql://localhost:3306/foodbolt?createDatabaseIfNotExist=true&useSSL=false
spring.datasource.username = admin
spring.datasource.password = admin
spring.datasource.dbcp2.max-total=1


# hibernate parameters
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# spring session parameters
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always

# log parameters
logging.level.org.springframework=ERROR
logging.level.com=ERROR

# aws parameters
amazon.dynamodb.endpoint=
amazon.aws.accesskey=
amazon.aws.secretkey=

spring.main.allow-bean-definition-overriding=true

# fb, google social login oauth2 parameters
spring.security.oauth2.client.registration.facebook.clientId = 
spring.security.oauth2.client.registration.facebook.clientSecret =
spring.security.oauth2.client.registration.facebook.redirectUriTemplate = {baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.facebook.scope = email,public_profile
spring.security.oauth2.client.provider.facebook.authorizationUri = https://www.facebook.com/v3.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.tokenUri = https://graph.facebook.com/v3.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.userInfoUri = https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
spring.security.oauth2.client.registration.google.clientId = 
spring.security.oauth2.client.registration.google.clientSecret = 
spring.security.oauth2.client.registration.google.redirectUriTemplate = {baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope = email,profile
app.auth.tokenSecret = 1234567890
app.auth.tokenExpirationMsec = 864000000
app.oauth2.authorizedRedirectUris = http://localhost:3000/oauth2/redirect
